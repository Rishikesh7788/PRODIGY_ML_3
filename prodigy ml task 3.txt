import os
import cv2
import numpy as np
from sklearn import svm
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from skimage.feature import hog
def load_data(data_dir):
    categories = ['cats', 'dogs']
    data = []
    labels = []

    for category in categories:
        folder = os.path.join(data_dir, category)
        label = categories.index(category)
        for file in os.listdir(folder):
            img_path = os.path.join(folder, file)
            img = cv2.imread(img_path)
            img = cv2.resize(img, (128, 128))  # Resize to 128x128
            gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
            data.append(gray)
            labels.append(label)
    
    return np.array(data), np.array(labels)

data_dir = 'data/train'
X, y = load_data(data_dir)
def extract_hog_features(images):
    hog_features = []
    for img in images:
        features, hog_image = hog(img, pixels_per_cell=(8, 8), cells_per_block=(2, 2), visualize=True)
        hog_features.append(features)
    return np.array(hog_features)

X_hog = extract_hog_features(X)
X_train, X_test, y_train, y_test = train_test_split(X_hog, y, test_size=0.2, random_state=42)
clf = svm.SVC(kernel='linear')
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')
def load_test_data(test_dir):
    data = []
    for file in os.listdir(test_dir):
        img_path = os.path.join(test_dir, file)
        img = cv2.imread(img_path)
        img = cv2.resize(img, (128, 128))
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        data.append(gray)
    
    return np.array(data)

test_dir = 'data/test'
X_test_data = load_test_data(test_dir)
X_test_hog = extract_hog_features(X_test_data)
y_test_pred = clf.predict(X_test_hog)
import pandas as pd

submission = pd.read_csv('/mnt/data/sampleSubmission.csv')
submission['label'] = y_test_pred
submission.to_csv('submission.csv', index=False)
